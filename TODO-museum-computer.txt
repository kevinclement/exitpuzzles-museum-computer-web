[x] convert to vue
  [x] cleanup helloworld and map to prototype
[ ] write test buttons for correct/incorrect

[ ] What behavior do we want for correct vs incorret answer?
  [ ] when button is pressed, all other answers are hidden
  [\] if incorrect, it will strike through it
    [x] kyle doesnt want this behavior 

[ ] do we want sounds?
  [ ] check built in monitor and see how bad that is
[ ] simple test rig for buttons with wood I have?

## Buttons:
  [ ] test button wiring raw
  [ ] wire up buttons to pi
  [ ] pi node app to detect button press

## Dynamic Client:
  [x] questions stored in json files
    [x] question
    [x] answers A-E
    [x] correct answer attribute
  [x] properly supports newlines in questions
    [x] newlines should get mapped to <p>
  [ ] randomization to questions
  [ ] websocket connection to webpage
  
## Pass/Fail:
  [ ] final score screen
    [ ] number correct
    [ ] number incorrect
  [ ] if all questions are correct, show passcode
  [ ] if any of them are wrong
    [ ] "press any button to restart quiz"
    [ ] restart, but don't repeat missed questions

## Launch Screen
  [ ] design screen
    [ ] "Insert Quiz Disk 2/2 to continue..."
    [ ] if disk 1 is remove and reinserted, noop from launch screen
    [ ] if disk 2 is removed and disk 1 is inserted, goes back to launch screen
  [ ] when disk 2 is inserted and detected, start quiz screens
    [ ] need to figure out how to listen for this mounting/unmounting
    
## Firebase Connection:
  [ ] node app can get questions from firebase and update locally cached questions
  [ ] should probably figure out what max characters are for it to fix on screen and limit that
